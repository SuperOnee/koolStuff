// Place your key bindings in this file to override the defaults
[
  // MetaJump
  {
    "key": "ctrl+;",
    "command": "metaGo.gotoSmart",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+o",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorTextFocus"
  },
  {
    "command": "turboConsoleLog.displayLogMessage",
    "key": "cmd+i"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+j",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 15
    }
  },
  {
    "key": "ctrl+k",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 15
    }
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "inputFocus"
  },
  {
    "key": "t",
    "command": "toggleexcludedfiles.toggle",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "f",
    "command": "revealFileInOS",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "alt+/",
    "command": "-metaGo.gotoSmart"
  },
  {
    "key": "alt+delete",
    "command": "-metaGo.metaJump.deleteToAfter",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+backspace",
    "command": "-metaGo.metaJump.deleteToBefore",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+enter",
    "when": "inputFocus && vim.mode == 'Normal'",
    "command": "editor.action.insertLineAfter"
  }
]
